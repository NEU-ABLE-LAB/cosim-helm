# Default values for alfalfa.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

secret:
  name: "aws-secrets"

namespace:
  name: "cosim"
env:
  public:
    JOB_QUEUE_URL: http://goaws:4100/queue/local-queue1
    JOB_QUEUE_URL_1: http://goaws:4100/queue/local-queue1
    JOB_QUEUE_URL_2: http://goaws:4100/queue/local-queue2
    MONGO_URL: mongodb://mongo:27017
    MONGO_DB_NAME: alfalfa
    LOGLEVEL: DEBUG
    NODE_ENV: production
    S3_URL: http://minio
    #S3_URL_EXTERNAL: https://alfalfa-cbri.nrel.gov 
    #AWS S3 end point url example below. See docs on obtaining url using kubectl 
    S3_URL_EXTERNAL: http://minio:9000
    REDIS_HOST: redis
    S3_BUCKET: alfalfa
    REGION: us-west-1
    INFLUXDB_DB: alfalfa
    INFLUXDB_HOST: influxdb
    # Need to start influx with this disabled first and then 
    # can set to true
    INFLUXDB_HTTP_AUTH_ENABLED: false
    HISTORIAN_ENABLE: false

  private:
    AWS_ACCESS_KEY_ID: user
    AWS_SECRET_ACCESS_KEY: password
    INFLUXDB_ADMIN_USER: admin
    INFLUXDB_ADMIN_PASSWORD: password
    GF_SECURITY_ADMIN_PASSWORD: password
    GF_SECURITY_ADMIN_USER: admin


# Set to google, aws, azure or docker-local
# docker-local is the docker-desktop and used for local deployments
provider: 
  name: "docker-local"

tags:
  log_stack: false

# rancher uses netappnfs for storageClass
storageClass: "ssd"

mongo:
  name:  "mongo"
  label: "mongo"
  container:
    name: "mongo"
    image: "mongo:5.0.14"
    resources:
      limits:
        cpu: 0.5
        memory: "1Gi"
      requests:
        cpu: 0.25
        memory: "512Mi"
    ports:
      db_port: 27017
  persistence:
    enabled: true
    size: 10Gi
    accessModes:
      - "ReadWriteOnce"

influxdb:
  name:  "influxdb"
  label: "influxdb"
  container:
    name: "influxdb"
    image: "influxdb:1.8"
    resources:
      limits:
        cpu: 1
        memory: "2Gi"
      requests:
        cpu: 0.5
        memory: "1G"
    ports:
      db_port: 8086
  persistence:
    enabled: true
    size: 10Gi
    accessModes:
      - "ReadWriteOnce"

redis:
  name: "redis"
  label: "redis"
  container:
    name: "redis"
    image: "redis:7.0.7"
    resources:
      limits:
        cpu: 1
        memory: "2Gi"
      requests:
        cpu: 0.5
        memory: "1Gi"
    ports:
      redis: 6379

goaws:
  name: "goaws"
  label: "goaws"
  container:
    name: "goaws"
    image: "pafortin/goaws:v0.3.1"
    resources:
      limits:
        cpu: 0.5
        memory: "512Mi"
      requests:
        cpu: 0.25
        memory: "256Mi"
    ports:
      sns: 4100

minio:
  name: "minio"
  label: "minio"
  container:
    name: "minio"
    image: "minio/minio:RELEASE.2021-01-16T02-19-44Z"
    resources:
      limits:
        cpu: 0.5
        memory: "1Gi"
      requests:
        cpu: 0.25
        memory: "256Mi"
    ports:
      s3: 9000
      web: 80
  persistence:
    enabled: true
    size: 10Gi
    accessModes:
      - "ReadWriteOnce"

mc:
  name: "mc"
  label: "mc"
  container:
    name: "mc"
    image: "minio/mc:RELEASE.2022-12-13T00-23-28Z"
    resources:
      limits:
        cpu: 0.25
        memory: "512Mi"
      requests:
        cpu: 0.1
        memory: "256Mi"
    ports:
      s3: 9000

web:
  name: "web"
  label: "web"
  container:
    name: "web"
    image: "ghcr.io/nrel/alfalfa/web:latest" # "nrel/alfalfa-web"
    resources:
      limits:
        cpu: 1
        memory: "3Gi"
      requests:
        cpu: 0.5
        memory: "1Gi"
    ports:
      http: 80
      test: 29043

worker:
  name: "worker" 
  label: "worker" 
  replicas: 5
  container:
    name: "worker"
    image: "ghcr.io/nrel/alfalfa/worker:latest" #"nrel/alfalfa-worker"
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "610m"
        memory: "450Mi"
    terminationGracePeriodSeconds: 300

cosim:
  name: "cosim"
  label: "cosim"
  replicas: 1
  container:
    name: "cosim"
    image: "neuablelab/cosim"
    resources:
      limits:
        cpu: 1
        memory: "4Gi"
      requests:
        cpu: 0.5
        memory: "1Gi"
    terminationGracePeriodSeconds: 3600
    ports:
      port: 5678
      targetPort: 5678
    volumeMounts:
      name: "cosim-storage"
      mountPath: "/cosim/ip_op"
  pv:
    name: "cosim-pv"
    spec:
      storageClassName: "manual"
      capacity:
        storage: "5Gi"
      accessModes: "ReadWriteOnce"
      hostPath:
        path: "/run/desktop/mnt/host/d/devel/CoSimAlfalfa/cosim/ip_op"
        # path: "/Users/Grad/kunind/devel/k8_output"
        type: "DirectoryOrCreate"
  pvc:
    name: "cosim-pvc"
    spec:
      accessModes: "ReadWriteOnce"
      volumeMode: "Filesystem"
      resources:
        requests:
          storage: "5Gi"
      storageClassName: "manual"


