apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.grafana.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.grafana.name  }}
      release: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: {{ .Values.grafana.name }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
        - name: init-wait-for-db
          image: alpine
          command: ["/bin/sh", "-c", "for i in $(seq 1 300); do nc -zvw1 {{  .Values.influxdb.name  }} {{ .Values.influxdb.container.ports.db_port }} && exit 0 || sleep 3; done; exit 1"]
      containers:
        - name: {{ .Values.grafana.container.name }}
          image: {{ .Values.grafana.container.image }}
          resources:
            requests:
              cpu:  {{  .Values.grafana.container.resources.requests.cpu  }}
              memory:  {{  .Values.grafana.container.resources.requests.memory  }}
            limits:
              cpu:  {{  .Values.grafana.container.resources.limits.cpu  }}
              memory:  {{  .Values.grafana.container.resources.limits.memory  }}
          ports:
            - containerPort:  {{ .Values.grafana.container.ports.grafana_port }}
          env:
            - name: INFLUXDB_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name  }}
                  key:  INFLUXDB_ADMIN_USER
            - name: INFLUXDB_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name  }}
                  key:  INFLUXDB_ADMIN_PASSWORD
            - name: INFLUXDB_DB
              value: {{ .Values.env.public.INFLUXDB_DB }}
            - name: INFLUXDB_HOST
              value: {{ .Values.env.public.INFLUXDB_HOST }}
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name  }}
                  key:  GF_SECURITY_ADMIN_USER
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name  }}
                  key:  GF_SECURITY_ADMIN_PASSWORD
          volumeMounts:
            - name: {{  .Values.grafana.name  }}
              mountPath: /etc/grafana/config.ini
              subPath: config.ini
            - name: {{  .Values.grafana.name  }}
              mountPath: /etc/grafana/provisioning/dashboards/all.yaml
              subPath: provisioning_dashboard.yaml
            - name: {{  .Values.grafana.name  }}
              mountPath: /etc/grafana/provisioning/datasources/all.yaml
              subPath: provisioning_data.yaml
            - name: {{  .Values.grafana.name  }}
              mountPath: /var/lib/grafana/dashboards/default_dashboard.yaml
              subPath: default_dashboard.yaml
      volumes:
        - name: {{  .Values.grafana.name  }}
          configMap:
            name: {{  .Values.grafana.name  }}


